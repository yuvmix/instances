import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"region": {
				"constant_value": "us-east-1",
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "",
	},
}

resources = {
	"module.dev_ec2_instance.aws_instance.this": {
		"address": "module.dev_ec2_instance.aws_instance.this",
		"config": {
			"ami": {
				"references": [
					"var.ami",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"availability_zone": {
				"references": [
					"var.availability_zone",
				],
			},
			"cpu_core_count": {
				"references": [
					"var.cpu_core_count",
				],
			},
			"cpu_threads_per_core": {
				"references": [
					"var.cpu_threads_per_core",
				],
			},
			"credit_specification": [
				{
					"cpu_credits": {
						"references": [
							"local.is_t_instance_type",
							"var.cpu_credits",
						],
					},
				},
			],
			"disable_api_termination": {
				"references": [
					"var.disable_api_termination",
				],
			},
			"ebs_optimized": {
				"references": [
					"var.ebs_optimized",
				],
			},
			"enclave_options": [
				{
					"enabled": {
						"references": [
							"var.enclave_options_enabled",
						],
					},
				},
			],
			"get_password_data": {
				"references": [
					"var.get_password_data",
				],
			},
			"hibernation": {
				"references": [
					"var.hibernation",
				],
			},
			"host_id": {
				"references": [
					"var.host_id",
				],
			},
			"iam_instance_profile": {
				"references": [
					"var.iam_instance_profile",
				],
			},
			"instance_initiated_shutdown_behavior": {
				"references": [
					"var.instance_initiated_shutdown_behavior",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"ipv6_address_count": {
				"references": [
					"var.ipv6_address_count",
				],
			},
			"ipv6_addresses": {
				"references": [
					"var.ipv6_addresses",
				],
			},
			"key_name": {
				"references": [
					"var.key_name",
				],
			},
			"monitoring": {
				"references": [
					"var.monitoring",
				],
			},
			"placement_group": {
				"references": [
					"var.placement_group",
				],
			},
			"private_ip": {
				"references": [
					"var.private_ip",
				],
			},
			"secondary_private_ips": {
				"references": [
					"var.secondary_private_ips",
				],
			},
			"source_dest_check": {
				"references": [
					"var.network_interface",
					"var.source_dest_check",
				],
			},
			"subnet_id": {
				"references": [
					"var.subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"tenancy": {
				"references": [
					"var.tenancy",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
			"user_data": {
				"references": [
					"var.user_data",
				],
			},
			"user_data_base64": {
				"references": [
					"var.user_data_base64",
				],
			},
			"volume_tags": {
				"references": [
					"var.enable_volume_tags",
					"var.name",
					"var.volume_tags",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"var.vpc_security_group_ids",
				],
			},
		},
		"count": {
			"references": [
				"local.create",
				"var.create_spot_instance",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.dev_ec2_instance",
		"name":                "this",
		"provider_config_key": "module.dev_ec2_instance:aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
	"module.dev_ec2_instance.aws_spot_instance_request.this": {
		"address": "module.dev_ec2_instance.aws_spot_instance_request.this",
		"config": {
			"ami": {
				"references": [
					"var.ami",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"availability_zone": {
				"references": [
					"var.availability_zone",
				],
			},
			"block_duration_minutes": {
				"references": [
					"var.spot_block_duration_minutes",
				],
			},
			"cpu_core_count": {
				"references": [
					"var.cpu_core_count",
				],
			},
			"cpu_threads_per_core": {
				"references": [
					"var.cpu_threads_per_core",
				],
			},
			"credit_specification": [
				{
					"cpu_credits": {
						"references": [
							"local.is_t_instance_type",
							"var.cpu_credits",
						],
					},
				},
			],
			"disable_api_termination": {
				"references": [
					"var.disable_api_termination",
				],
			},
			"ebs_optimized": {
				"references": [
					"var.ebs_optimized",
				],
			},
			"enclave_options": [
				{
					"enabled": {
						"references": [
							"var.enclave_options_enabled",
						],
					},
				},
			],
			"get_password_data": {
				"references": [
					"var.get_password_data",
				],
			},
			"hibernation": {
				"references": [
					"var.hibernation",
				],
			},
			"host_id": {
				"references": [
					"var.host_id",
				],
			},
			"iam_instance_profile": {
				"references": [
					"var.iam_instance_profile",
				],
			},
			"instance_initiated_shutdown_behavior": {
				"references": [
					"var.instance_initiated_shutdown_behavior",
				],
			},
			"instance_interruption_behavior": {
				"references": [
					"var.spot_instance_interruption_behavior",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"ipv6_address_count": {
				"references": [
					"var.ipv6_address_count",
				],
			},
			"ipv6_addresses": {
				"references": [
					"var.ipv6_addresses",
				],
			},
			"key_name": {
				"references": [
					"var.key_name",
				],
			},
			"launch_group": {
				"references": [
					"var.spot_launch_group",
				],
			},
			"monitoring": {
				"references": [
					"var.monitoring",
				],
			},
			"placement_group": {
				"references": [
					"var.placement_group",
				],
			},
			"private_ip": {
				"references": [
					"var.private_ip",
				],
			},
			"secondary_private_ips": {
				"references": [
					"var.secondary_private_ips",
				],
			},
			"source_dest_check": {
				"references": [
					"var.network_interface",
					"var.source_dest_check",
				],
			},
			"spot_price": {
				"references": [
					"var.spot_price",
				],
			},
			"spot_type": {
				"references": [
					"var.spot_type",
				],
			},
			"subnet_id": {
				"references": [
					"var.subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"tenancy": {
				"references": [
					"var.tenancy",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
			"user_data": {
				"references": [
					"var.user_data",
				],
			},
			"user_data_base64": {
				"references": [
					"var.user_data_base64",
				],
			},
			"valid_from": {
				"references": [
					"var.spot_valid_from",
				],
			},
			"valid_until": {
				"references": [
					"var.spot_valid_until",
				],
			},
			"volume_tags": {
				"references": [
					"var.enable_volume_tags",
					"var.name",
					"var.volume_tags",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"var.vpc_security_group_ids",
				],
			},
			"wait_for_fulfillment": {
				"references": [
					"var.spot_wait_for_fulfillment",
				],
			},
		},
		"count": {
			"references": [
				"local.create",
				"var.create_spot_instance",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.dev_ec2_instance",
		"name":                "this",
		"provider_config_key": "module.dev_ec2_instance:aws",
		"provisioners":        [],
		"type":                "aws_spot_instance_request",
	},
	"module.ec2_instance.aws_instance.this": {
		"address": "module.ec2_instance.aws_instance.this",
		"config": {
			"ami": {
				"references": [
					"var.ami",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"availability_zone": {
				"references": [
					"var.availability_zone",
				],
			},
			"cpu_core_count": {
				"references": [
					"var.cpu_core_count",
				],
			},
			"cpu_threads_per_core": {
				"references": [
					"var.cpu_threads_per_core",
				],
			},
			"credit_specification": [
				{
					"cpu_credits": {
						"references": [
							"local.is_t_instance_type",
							"var.cpu_credits",
						],
					},
				},
			],
			"disable_api_termination": {
				"references": [
					"var.disable_api_termination",
				],
			},
			"ebs_optimized": {
				"references": [
					"var.ebs_optimized",
				],
			},
			"enclave_options": [
				{
					"enabled": {
						"references": [
							"var.enclave_options_enabled",
						],
					},
				},
			],
			"get_password_data": {
				"references": [
					"var.get_password_data",
				],
			},
			"hibernation": {
				"references": [
					"var.hibernation",
				],
			},
			"host_id": {
				"references": [
					"var.host_id",
				],
			},
			"iam_instance_profile": {
				"references": [
					"var.iam_instance_profile",
				],
			},
			"instance_initiated_shutdown_behavior": {
				"references": [
					"var.instance_initiated_shutdown_behavior",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"ipv6_address_count": {
				"references": [
					"var.ipv6_address_count",
				],
			},
			"ipv6_addresses": {
				"references": [
					"var.ipv6_addresses",
				],
			},
			"key_name": {
				"references": [
					"var.key_name",
				],
			},
			"monitoring": {
				"references": [
					"var.monitoring",
				],
			},
			"placement_group": {
				"references": [
					"var.placement_group",
				],
			},
			"private_ip": {
				"references": [
					"var.private_ip",
				],
			},
			"secondary_private_ips": {
				"references": [
					"var.secondary_private_ips",
				],
			},
			"source_dest_check": {
				"references": [
					"var.network_interface",
					"var.source_dest_check",
				],
			},
			"subnet_id": {
				"references": [
					"var.subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"tenancy": {
				"references": [
					"var.tenancy",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
			"user_data": {
				"references": [
					"var.user_data",
				],
			},
			"user_data_base64": {
				"references": [
					"var.user_data_base64",
				],
			},
			"volume_tags": {
				"references": [
					"var.enable_volume_tags",
					"var.name",
					"var.volume_tags",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"var.vpc_security_group_ids",
				],
			},
		},
		"count": {
			"references": [
				"local.create",
				"var.create_spot_instance",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.ec2_instance",
		"name":                "this",
		"provider_config_key": "module.ec2_instance:aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
	"module.ec2_instance.aws_spot_instance_request.this": {
		"address": "module.ec2_instance.aws_spot_instance_request.this",
		"config": {
			"ami": {
				"references": [
					"var.ami",
				],
			},
			"associate_public_ip_address": {
				"references": [
					"var.associate_public_ip_address",
				],
			},
			"availability_zone": {
				"references": [
					"var.availability_zone",
				],
			},
			"block_duration_minutes": {
				"references": [
					"var.spot_block_duration_minutes",
				],
			},
			"cpu_core_count": {
				"references": [
					"var.cpu_core_count",
				],
			},
			"cpu_threads_per_core": {
				"references": [
					"var.cpu_threads_per_core",
				],
			},
			"credit_specification": [
				{
					"cpu_credits": {
						"references": [
							"local.is_t_instance_type",
							"var.cpu_credits",
						],
					},
				},
			],
			"disable_api_termination": {
				"references": [
					"var.disable_api_termination",
				],
			},
			"ebs_optimized": {
				"references": [
					"var.ebs_optimized",
				],
			},
			"enclave_options": [
				{
					"enabled": {
						"references": [
							"var.enclave_options_enabled",
						],
					},
				},
			],
			"get_password_data": {
				"references": [
					"var.get_password_data",
				],
			},
			"hibernation": {
				"references": [
					"var.hibernation",
				],
			},
			"host_id": {
				"references": [
					"var.host_id",
				],
			},
			"iam_instance_profile": {
				"references": [
					"var.iam_instance_profile",
				],
			},
			"instance_initiated_shutdown_behavior": {
				"references": [
					"var.instance_initiated_shutdown_behavior",
				],
			},
			"instance_interruption_behavior": {
				"references": [
					"var.spot_instance_interruption_behavior",
				],
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"ipv6_address_count": {
				"references": [
					"var.ipv6_address_count",
				],
			},
			"ipv6_addresses": {
				"references": [
					"var.ipv6_addresses",
				],
			},
			"key_name": {
				"references": [
					"var.key_name",
				],
			},
			"launch_group": {
				"references": [
					"var.spot_launch_group",
				],
			},
			"monitoring": {
				"references": [
					"var.monitoring",
				],
			},
			"placement_group": {
				"references": [
					"var.placement_group",
				],
			},
			"private_ip": {
				"references": [
					"var.private_ip",
				],
			},
			"secondary_private_ips": {
				"references": [
					"var.secondary_private_ips",
				],
			},
			"source_dest_check": {
				"references": [
					"var.network_interface",
					"var.source_dest_check",
				],
			},
			"spot_price": {
				"references": [
					"var.spot_price",
				],
			},
			"spot_type": {
				"references": [
					"var.spot_type",
				],
			},
			"subnet_id": {
				"references": [
					"var.subnet_id",
				],
			},
			"tags": {
				"references": [
					"var.name",
					"var.tags",
				],
			},
			"tenancy": {
				"references": [
					"var.tenancy",
				],
			},
			"timeouts": {
				"constant_value": null,
			},
			"user_data": {
				"references": [
					"var.user_data",
				],
			},
			"user_data_base64": {
				"references": [
					"var.user_data_base64",
				],
			},
			"valid_from": {
				"references": [
					"var.spot_valid_from",
				],
			},
			"valid_until": {
				"references": [
					"var.spot_valid_until",
				],
			},
			"volume_tags": {
				"references": [
					"var.enable_volume_tags",
					"var.name",
					"var.volume_tags",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"var.vpc_security_group_ids",
				],
			},
			"wait_for_fulfillment": {
				"references": [
					"var.spot_wait_for_fulfillment",
				],
			},
		},
		"count": {
			"references": [
				"local.create",
				"var.create_spot_instance",
			],
		},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "module.ec2_instance",
		"name":                "this",
		"provider_config_key": "module.ec2_instance:aws",
		"provisioners":        [],
		"type":                "aws_spot_instance_request",
	},
}

provisioners = {}

variables = {
	"module.dev_ec2_instance:ami": {
		"default":        "",
		"description":    "ID of AMI to use for the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "ami",
	},
	"module.dev_ec2_instance:associate_public_ip_address": {
		"default":        null,
		"description":    "Whether to associate a public IP address with an instance in a VPC",
		"module_address": "module.dev_ec2_instance",
		"name":           "associate_public_ip_address",
	},
	"module.dev_ec2_instance:availability_zone": {
		"default":        null,
		"description":    "AZ to start the instance in",
		"module_address": "module.dev_ec2_instance",
		"name":           "availability_zone",
	},
	"module.dev_ec2_instance:capacity_reservation_specification": {
		"default":        null,
		"description":    "Describes an instance's Capacity Reservation targeting option",
		"module_address": "module.dev_ec2_instance",
		"name":           "capacity_reservation_specification",
	},
	"module.dev_ec2_instance:cpu_core_count": {
		"default":        null,
		"description":    "Sets the number of CPU cores for an instance.",
		"module_address": "module.dev_ec2_instance",
		"name":           "cpu_core_count",
	},
	"module.dev_ec2_instance:cpu_credits": {
		"default":        null,
		"description":    "The credit option for CPU usage (unlimited or standard)",
		"module_address": "module.dev_ec2_instance",
		"name":           "cpu_credits",
	},
	"module.dev_ec2_instance:cpu_threads_per_core": {
		"default":        null,
		"description":    "Sets the number of CPU threads per core for an instance (has no effect unless cpu_core_count is also set).",
		"module_address": "module.dev_ec2_instance",
		"name":           "cpu_threads_per_core",
	},
	"module.dev_ec2_instance:create": {
		"default":        true,
		"description":    "Whether to create an instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "create",
	},
	"module.dev_ec2_instance:create_spot_instance": {
		"default":        false,
		"description":    "Depicts if the instance is a spot instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "create_spot_instance",
	},
	"module.dev_ec2_instance:disable_api_termination": {
		"default":        null,
		"description":    "If true, enables EC2 Instance Termination Protection",
		"module_address": "module.dev_ec2_instance",
		"name":           "disable_api_termination",
	},
	"module.dev_ec2_instance:ebs_block_device": {
		"default":        [],
		"description":    "Additional EBS block devices to attach to the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "ebs_block_device",
	},
	"module.dev_ec2_instance:ebs_optimized": {
		"default":        null,
		"description":    "If true, the launched EC2 instance will be EBS-optimized",
		"module_address": "module.dev_ec2_instance",
		"name":           "ebs_optimized",
	},
	"module.dev_ec2_instance:enable_volume_tags": {
		"default":        true,
		"description":    "Whether to enable volume tags (if enabled it conflicts with root_block_device tags)",
		"module_address": "module.dev_ec2_instance",
		"name":           "enable_volume_tags",
	},
	"module.dev_ec2_instance:enclave_options_enabled": {
		"default":        null,
		"description":    "Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`",
		"module_address": "module.dev_ec2_instance",
		"name":           "enclave_options_enabled",
	},
	"module.dev_ec2_instance:ephemeral_block_device": {
		"default":        [],
		"description":    "Customize Ephemeral (also known as Instance Store) volumes on the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "ephemeral_block_device",
	},
	"module.dev_ec2_instance:get_password_data": {
		"default":        null,
		"description":    "If true, wait for password data to become available and retrieve it.",
		"module_address": "module.dev_ec2_instance",
		"name":           "get_password_data",
	},
	"module.dev_ec2_instance:hibernation": {
		"default":        null,
		"description":    "If true, the launched EC2 instance will support hibernation",
		"module_address": "module.dev_ec2_instance",
		"name":           "hibernation",
	},
	"module.dev_ec2_instance:host_id": {
		"default":        null,
		"description":    "ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host",
		"module_address": "module.dev_ec2_instance",
		"name":           "host_id",
	},
	"module.dev_ec2_instance:iam_instance_profile": {
		"default":        null,
		"description":    "IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile",
		"module_address": "module.dev_ec2_instance",
		"name":           "iam_instance_profile",
	},
	"module.dev_ec2_instance:instance_initiated_shutdown_behavior": {
		"default":        null,
		"description":    "Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "instance_initiated_shutdown_behavior",
	},
	"module.dev_ec2_instance:instance_type": {
		"default":        "t3.micro",
		"description":    "The type of instance to start",
		"module_address": "module.dev_ec2_instance",
		"name":           "instance_type",
	},
	"module.dev_ec2_instance:ipv6_address_count": {
		"default":        null,
		"description":    "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet",
		"module_address": "module.dev_ec2_instance",
		"name":           "ipv6_address_count",
	},
	"module.dev_ec2_instance:ipv6_addresses": {
		"default":        null,
		"description":    "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface",
		"module_address": "module.dev_ec2_instance",
		"name":           "ipv6_addresses",
	},
	"module.dev_ec2_instance:key_name": {
		"default":        null,
		"description":    "Key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource",
		"module_address": "module.dev_ec2_instance",
		"name":           "key_name",
	},
	"module.dev_ec2_instance:launch_template": {
		"default":        null,
		"description":    "Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template",
		"module_address": "module.dev_ec2_instance",
		"name":           "launch_template",
	},
	"module.dev_ec2_instance:metadata_options": {
		"default":        {},
		"description":    "Customize the metadata options of the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "metadata_options",
	},
	"module.dev_ec2_instance:monitoring": {
		"default":        false,
		"description":    "If true, the launched EC2 instance will have detailed monitoring enabled",
		"module_address": "module.dev_ec2_instance",
		"name":           "monitoring",
	},
	"module.dev_ec2_instance:name": {
		"default":        "",
		"description":    "Name to be used on EC2 instance created",
		"module_address": "module.dev_ec2_instance",
		"name":           "name",
	},
	"module.dev_ec2_instance:network_interface": {
		"default":        [],
		"description":    "Customize network interfaces to be attached at instance boot time",
		"module_address": "module.dev_ec2_instance",
		"name":           "network_interface",
	},
	"module.dev_ec2_instance:placement_group": {
		"default":        null,
		"description":    "The Placement Group to start the instance in",
		"module_address": "module.dev_ec2_instance",
		"name":           "placement_group",
	},
	"module.dev_ec2_instance:private_ip": {
		"default":        null,
		"description":    "Private IP address to associate with the instance in a VPC",
		"module_address": "module.dev_ec2_instance",
		"name":           "private_ip",
	},
	"module.dev_ec2_instance:putin_khuylo": {
		"default":        true,
		"description":    "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
		"module_address": "module.dev_ec2_instance",
		"name":           "putin_khuylo",
	},
	"module.dev_ec2_instance:root_block_device": {
		"default":        [],
		"description":    "Customize details about the root block device of the instance. See Block Devices below for details",
		"module_address": "module.dev_ec2_instance",
		"name":           "root_block_device",
	},
	"module.dev_ec2_instance:secondary_private_ips": {
		"default":        null,
		"description":    "A list of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e. referenced in a `network_interface block`",
		"module_address": "module.dev_ec2_instance",
		"name":           "secondary_private_ips",
	},
	"module.dev_ec2_instance:source_dest_check": {
		"default":        true,
		"description":    "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.",
		"module_address": "module.dev_ec2_instance",
		"name":           "source_dest_check",
	},
	"module.dev_ec2_instance:spot_block_duration_minutes": {
		"default":        null,
		"description":    "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360)",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_block_duration_minutes",
	},
	"module.dev_ec2_instance:spot_instance_interruption_behavior": {
		"default":        null,
		"description":    "Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_instance_interruption_behavior",
	},
	"module.dev_ec2_instance:spot_launch_group": {
		"default":        null,
		"description":    "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_launch_group",
	},
	"module.dev_ec2_instance:spot_price": {
		"default":        null,
		"description":    "The maximum price to request on the spot market. Defaults to on-demand price",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_price",
	},
	"module.dev_ec2_instance:spot_type": {
		"default":        null,
		"description":    "If set to one-time, after the instance is terminated, the spot request will be closed. Default `persistent`",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_type",
	},
	"module.dev_ec2_instance:spot_valid_from": {
		"default":        null,
		"description":    "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_valid_from",
	},
	"module.dev_ec2_instance:spot_valid_until": {
		"default":        null,
		"description":    "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_valid_until",
	},
	"module.dev_ec2_instance:spot_wait_for_fulfillment": {
		"default":        null,
		"description":    "If set, Terraform will wait for the Spot Request to be fulfilled, and will throw an error if the timeout of 10m is reached",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_wait_for_fulfillment",
	},
	"module.dev_ec2_instance:subnet_id": {
		"default":        null,
		"description":    "The VPC Subnet ID to launch in",
		"module_address": "module.dev_ec2_instance",
		"name":           "subnet_id",
	},
	"module.dev_ec2_instance:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the resource",
		"module_address": "module.dev_ec2_instance",
		"name":           "tags",
	},
	"module.dev_ec2_instance:tenancy": {
		"default":        null,
		"description":    "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.",
		"module_address": "module.dev_ec2_instance",
		"name":           "tenancy",
	},
	"module.dev_ec2_instance:timeouts": {
		"default":        {},
		"description":    "Define maximum timeout for creating, updating, and deleting EC2 instance resources",
		"module_address": "module.dev_ec2_instance",
		"name":           "timeouts",
	},
	"module.dev_ec2_instance:user_data": {
		"default":        null,
		"description":    "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
		"module_address": "module.dev_ec2_instance",
		"name":           "user_data",
	},
	"module.dev_ec2_instance:user_data_base64": {
		"default":        null,
		"description":    "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
		"module_address": "module.dev_ec2_instance",
		"name":           "user_data_base64",
	},
	"module.dev_ec2_instance:volume_tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the devices created by the instance at launch time",
		"module_address": "module.dev_ec2_instance",
		"name":           "volume_tags",
	},
	"module.dev_ec2_instance:vpc_security_group_ids": {
		"default":        null,
		"description":    "A list of security group IDs to associate with",
		"module_address": "module.dev_ec2_instance",
		"name":           "vpc_security_group_ids",
	},
	"module.ec2_instance:ami": {
		"default":        "",
		"description":    "ID of AMI to use for the instance",
		"module_address": "module.ec2_instance",
		"name":           "ami",
	},
	"module.ec2_instance:associate_public_ip_address": {
		"default":        null,
		"description":    "Whether to associate a public IP address with an instance in a VPC",
		"module_address": "module.ec2_instance",
		"name":           "associate_public_ip_address",
	},
	"module.ec2_instance:availability_zone": {
		"default":        null,
		"description":    "AZ to start the instance in",
		"module_address": "module.ec2_instance",
		"name":           "availability_zone",
	},
	"module.ec2_instance:capacity_reservation_specification": {
		"default":        null,
		"description":    "Describes an instance's Capacity Reservation targeting option",
		"module_address": "module.ec2_instance",
		"name":           "capacity_reservation_specification",
	},
	"module.ec2_instance:cpu_core_count": {
		"default":        null,
		"description":    "Sets the number of CPU cores for an instance.",
		"module_address": "module.ec2_instance",
		"name":           "cpu_core_count",
	},
	"module.ec2_instance:cpu_credits": {
		"default":        null,
		"description":    "The credit option for CPU usage (unlimited or standard)",
		"module_address": "module.ec2_instance",
		"name":           "cpu_credits",
	},
	"module.ec2_instance:cpu_threads_per_core": {
		"default":        null,
		"description":    "Sets the number of CPU threads per core for an instance (has no effect unless cpu_core_count is also set).",
		"module_address": "module.ec2_instance",
		"name":           "cpu_threads_per_core",
	},
	"module.ec2_instance:create": {
		"default":        true,
		"description":    "Whether to create an instance",
		"module_address": "module.ec2_instance",
		"name":           "create",
	},
	"module.ec2_instance:create_spot_instance": {
		"default":        false,
		"description":    "Depicts if the instance is a spot instance",
		"module_address": "module.ec2_instance",
		"name":           "create_spot_instance",
	},
	"module.ec2_instance:disable_api_termination": {
		"default":        null,
		"description":    "If true, enables EC2 Instance Termination Protection",
		"module_address": "module.ec2_instance",
		"name":           "disable_api_termination",
	},
	"module.ec2_instance:ebs_block_device": {
		"default":        [],
		"description":    "Additional EBS block devices to attach to the instance",
		"module_address": "module.ec2_instance",
		"name":           "ebs_block_device",
	},
	"module.ec2_instance:ebs_optimized": {
		"default":        null,
		"description":    "If true, the launched EC2 instance will be EBS-optimized",
		"module_address": "module.ec2_instance",
		"name":           "ebs_optimized",
	},
	"module.ec2_instance:enable_volume_tags": {
		"default":        true,
		"description":    "Whether to enable volume tags (if enabled it conflicts with root_block_device tags)",
		"module_address": "module.ec2_instance",
		"name":           "enable_volume_tags",
	},
	"module.ec2_instance:enclave_options_enabled": {
		"default":        null,
		"description":    "Whether Nitro Enclaves will be enabled on the instance. Defaults to `false`",
		"module_address": "module.ec2_instance",
		"name":           "enclave_options_enabled",
	},
	"module.ec2_instance:ephemeral_block_device": {
		"default":        [],
		"description":    "Customize Ephemeral (also known as Instance Store) volumes on the instance",
		"module_address": "module.ec2_instance",
		"name":           "ephemeral_block_device",
	},
	"module.ec2_instance:get_password_data": {
		"default":        null,
		"description":    "If true, wait for password data to become available and retrieve it.",
		"module_address": "module.ec2_instance",
		"name":           "get_password_data",
	},
	"module.ec2_instance:hibernation": {
		"default":        null,
		"description":    "If true, the launched EC2 instance will support hibernation",
		"module_address": "module.ec2_instance",
		"name":           "hibernation",
	},
	"module.ec2_instance:host_id": {
		"default":        null,
		"description":    "ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host",
		"module_address": "module.ec2_instance",
		"name":           "host_id",
	},
	"module.ec2_instance:iam_instance_profile": {
		"default":        null,
		"description":    "IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile",
		"module_address": "module.ec2_instance",
		"name":           "iam_instance_profile",
	},
	"module.ec2_instance:instance_initiated_shutdown_behavior": {
		"default":        null,
		"description":    "Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instance",
		"module_address": "module.ec2_instance",
		"name":           "instance_initiated_shutdown_behavior",
	},
	"module.ec2_instance:instance_type": {
		"default":        "t3.micro",
		"description":    "The type of instance to start",
		"module_address": "module.ec2_instance",
		"name":           "instance_type",
	},
	"module.ec2_instance:ipv6_address_count": {
		"default":        null,
		"description":    "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet",
		"module_address": "module.ec2_instance",
		"name":           "ipv6_address_count",
	},
	"module.ec2_instance:ipv6_addresses": {
		"default":        null,
		"description":    "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface",
		"module_address": "module.ec2_instance",
		"name":           "ipv6_addresses",
	},
	"module.ec2_instance:key_name": {
		"default":        null,
		"description":    "Key name of the Key Pair to use for the instance; which can be managed using the `aws_key_pair` resource",
		"module_address": "module.ec2_instance",
		"name":           "key_name",
	},
	"module.ec2_instance:launch_template": {
		"default":        null,
		"description":    "Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template",
		"module_address": "module.ec2_instance",
		"name":           "launch_template",
	},
	"module.ec2_instance:metadata_options": {
		"default":        {},
		"description":    "Customize the metadata options of the instance",
		"module_address": "module.ec2_instance",
		"name":           "metadata_options",
	},
	"module.ec2_instance:monitoring": {
		"default":        false,
		"description":    "If true, the launched EC2 instance will have detailed monitoring enabled",
		"module_address": "module.ec2_instance",
		"name":           "monitoring",
	},
	"module.ec2_instance:name": {
		"default":        "",
		"description":    "Name to be used on EC2 instance created",
		"module_address": "module.ec2_instance",
		"name":           "name",
	},
	"module.ec2_instance:network_interface": {
		"default":        [],
		"description":    "Customize network interfaces to be attached at instance boot time",
		"module_address": "module.ec2_instance",
		"name":           "network_interface",
	},
	"module.ec2_instance:placement_group": {
		"default":        null,
		"description":    "The Placement Group to start the instance in",
		"module_address": "module.ec2_instance",
		"name":           "placement_group",
	},
	"module.ec2_instance:private_ip": {
		"default":        null,
		"description":    "Private IP address to associate with the instance in a VPC",
		"module_address": "module.ec2_instance",
		"name":           "private_ip",
	},
	"module.ec2_instance:putin_khuylo": {
		"default":        true,
		"description":    "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!",
		"module_address": "module.ec2_instance",
		"name":           "putin_khuylo",
	},
	"module.ec2_instance:root_block_device": {
		"default":        [],
		"description":    "Customize details about the root block device of the instance. See Block Devices below for details",
		"module_address": "module.ec2_instance",
		"name":           "root_block_device",
	},
	"module.ec2_instance:secondary_private_ips": {
		"default":        null,
		"description":    "A list of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e. referenced in a `network_interface block`",
		"module_address": "module.ec2_instance",
		"name":           "secondary_private_ips",
	},
	"module.ec2_instance:source_dest_check": {
		"default":        true,
		"description":    "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.",
		"module_address": "module.ec2_instance",
		"name":           "source_dest_check",
	},
	"module.ec2_instance:spot_block_duration_minutes": {
		"default":        null,
		"description":    "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360)",
		"module_address": "module.ec2_instance",
		"name":           "spot_block_duration_minutes",
	},
	"module.ec2_instance:spot_instance_interruption_behavior": {
		"default":        null,
		"description":    "Indicates Spot instance behavior when it is interrupted. Valid values are `terminate`, `stop`, or `hibernate`",
		"module_address": "module.ec2_instance",
		"name":           "spot_instance_interruption_behavior",
	},
	"module.ec2_instance:spot_launch_group": {
		"default":        null,
		"description":    "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually",
		"module_address": "module.ec2_instance",
		"name":           "spot_launch_group",
	},
	"module.ec2_instance:spot_price": {
		"default":        null,
		"description":    "The maximum price to request on the spot market. Defaults to on-demand price",
		"module_address": "module.ec2_instance",
		"name":           "spot_price",
	},
	"module.ec2_instance:spot_type": {
		"default":        null,
		"description":    "If set to one-time, after the instance is terminated, the spot request will be closed. Default `persistent`",
		"module_address": "module.ec2_instance",
		"name":           "spot_type",
	},
	"module.ec2_instance:spot_valid_from": {
		"default":        null,
		"description":    "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)",
		"module_address": "module.ec2_instance",
		"name":           "spot_valid_from",
	},
	"module.ec2_instance:spot_valid_until": {
		"default":        null,
		"description":    "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ)",
		"module_address": "module.ec2_instance",
		"name":           "spot_valid_until",
	},
	"module.ec2_instance:spot_wait_for_fulfillment": {
		"default":        null,
		"description":    "If set, Terraform will wait for the Spot Request to be fulfilled, and will throw an error if the timeout of 10m is reached",
		"module_address": "module.ec2_instance",
		"name":           "spot_wait_for_fulfillment",
	},
	"module.ec2_instance:subnet_id": {
		"default":        null,
		"description":    "The VPC Subnet ID to launch in",
		"module_address": "module.ec2_instance",
		"name":           "subnet_id",
	},
	"module.ec2_instance:tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the resource",
		"module_address": "module.ec2_instance",
		"name":           "tags",
	},
	"module.ec2_instance:tenancy": {
		"default":        null,
		"description":    "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.",
		"module_address": "module.ec2_instance",
		"name":           "tenancy",
	},
	"module.ec2_instance:timeouts": {
		"default":        {},
		"description":    "Define maximum timeout for creating, updating, and deleting EC2 instance resources",
		"module_address": "module.ec2_instance",
		"name":           "timeouts",
	},
	"module.ec2_instance:user_data": {
		"default":        null,
		"description":    "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
		"module_address": "module.ec2_instance",
		"name":           "user_data",
	},
	"module.ec2_instance:user_data_base64": {
		"default":        null,
		"description":    "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
		"module_address": "module.ec2_instance",
		"name":           "user_data_base64",
	},
	"module.ec2_instance:volume_tags": {
		"default":        {},
		"description":    "A mapping of tags to assign to the devices created by the instance at launch time",
		"module_address": "module.ec2_instance",
		"name":           "volume_tags",
	},
	"module.ec2_instance:vpc_security_group_ids": {
		"default":        null,
		"description":    "A list of security group IDs to associate with",
		"module_address": "module.ec2_instance",
		"name":           "vpc_security_group_ids",
	},
}

outputs = {
	"module.dev_ec2_instance:arn": {
		"depends_on":     [],
		"description":    "The ARN of the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].arn",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].arn",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:capacity_reservation_specification": {
		"depends_on":     [],
		"description":    "Capacity reservation specification of the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "capacity_reservation_specification",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].capacity_reservation_specification",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].capacity_reservation_specification",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:id": {
		"depends_on":     [],
		"description":    "The ID of the instance",
		"module_address": "module.dev_ec2_instance",
		"name":           "id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].id",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:instance_state": {
		"depends_on":     [],
		"description":    "The state of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`",
		"module_address": "module.dev_ec2_instance",
		"name":           "instance_state",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].instance_state",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].instance_state",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:ipv6_addresses": {
		"depends_on":     [],
		"description":    "The IPv6 address assigned to the instance, if applicable.",
		"module_address": "module.dev_ec2_instance",
		"name":           "ipv6_addresses",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].ipv6_addresses",
				"aws_instance.this[0]",
				"aws_instance.this",
			],
		},
	},
	"module.dev_ec2_instance:outpost_arn": {
		"depends_on":     [],
		"description":    "The ARN of the Outpost the instance is assigned to",
		"module_address": "module.dev_ec2_instance",
		"name":           "outpost_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].outpost_arn",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].outpost_arn",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:password_data": {
		"depends_on":     [],
		"description":    "Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true",
		"module_address": "module.dev_ec2_instance",
		"name":           "password_data",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].password_data",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].password_data",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:primary_network_interface_id": {
		"depends_on":     [],
		"description":    "The ID of the instance's primary network interface",
		"module_address": "module.dev_ec2_instance",
		"name":           "primary_network_interface_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].primary_network_interface_id",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].primary_network_interface_id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:private_dns": {
		"depends_on":     [],
		"description":    "The private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.dev_ec2_instance",
		"name":           "private_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].private_dns",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].private_dns",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:private_ip": {
		"depends_on":     [],
		"description":    "The private IP address assigned to the instance.",
		"module_address": "module.dev_ec2_instance",
		"name":           "private_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].private_ip",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].private_ip",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:public_dns": {
		"depends_on":     [],
		"description":    "The public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.dev_ec2_instance",
		"name":           "public_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].public_dns",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].public_dns",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:public_ip": {
		"depends_on":     [],
		"description":    "The public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use `public_ip` as this field will change after the EIP is attached",
		"module_address": "module.dev_ec2_instance",
		"name":           "public_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].public_ip",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].public_ip",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:spot_bid_status": {
		"depends_on":     [],
		"description":    "The current bid status of the Spot Instance Request",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_bid_status",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_bid_status",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:spot_instance_id": {
		"depends_on":     [],
		"description":    "The Instance ID (if any) that is currently fulfilling the Spot Instance request",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_instance_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_instance_id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:spot_request_state": {
		"depends_on":     [],
		"description":    "The current request state of the Spot Instance Request",
		"module_address": "module.dev_ec2_instance",
		"name":           "spot_request_state",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_request_state",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.dev_ec2_instance:tags_all": {
		"depends_on":     [],
		"description":    "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block",
		"module_address": "module.dev_ec2_instance",
		"name":           "tags_all",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].tags_all",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].tags_all",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:arn": {
		"depends_on":     [],
		"description":    "The ARN of the instance",
		"module_address": "module.ec2_instance",
		"name":           "arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].arn",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].arn",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:capacity_reservation_specification": {
		"depends_on":     [],
		"description":    "Capacity reservation specification of the instance",
		"module_address": "module.ec2_instance",
		"name":           "capacity_reservation_specification",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].capacity_reservation_specification",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].capacity_reservation_specification",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:id": {
		"depends_on":     [],
		"description":    "The ID of the instance",
		"module_address": "module.ec2_instance",
		"name":           "id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].id",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:instance_state": {
		"depends_on":     [],
		"description":    "The state of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`",
		"module_address": "module.ec2_instance",
		"name":           "instance_state",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].instance_state",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].instance_state",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:ipv6_addresses": {
		"depends_on":     [],
		"description":    "The IPv6 address assigned to the instance, if applicable.",
		"module_address": "module.ec2_instance",
		"name":           "ipv6_addresses",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].ipv6_addresses",
				"aws_instance.this[0]",
				"aws_instance.this",
			],
		},
	},
	"module.ec2_instance:outpost_arn": {
		"depends_on":     [],
		"description":    "The ARN of the Outpost the instance is assigned to",
		"module_address": "module.ec2_instance",
		"name":           "outpost_arn",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].outpost_arn",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].outpost_arn",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:password_data": {
		"depends_on":     [],
		"description":    "Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true",
		"module_address": "module.ec2_instance",
		"name":           "password_data",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].password_data",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].password_data",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:primary_network_interface_id": {
		"depends_on":     [],
		"description":    "The ID of the instance's primary network interface",
		"module_address": "module.ec2_instance",
		"name":           "primary_network_interface_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].primary_network_interface_id",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].primary_network_interface_id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:private_dns": {
		"depends_on":     [],
		"description":    "The private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.ec2_instance",
		"name":           "private_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].private_dns",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].private_dns",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:private_ip": {
		"depends_on":     [],
		"description":    "The private IP address assigned to the instance.",
		"module_address": "module.ec2_instance",
		"name":           "private_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].private_ip",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].private_ip",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:public_dns": {
		"depends_on":     [],
		"description":    "The public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC",
		"module_address": "module.ec2_instance",
		"name":           "public_dns",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].public_dns",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].public_dns",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:public_ip": {
		"depends_on":     [],
		"description":    "The public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use `public_ip` as this field will change after the EIP is attached",
		"module_address": "module.ec2_instance",
		"name":           "public_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].public_ip",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].public_ip",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:spot_bid_status": {
		"depends_on":     [],
		"description":    "The current bid status of the Spot Instance Request",
		"module_address": "module.ec2_instance",
		"name":           "spot_bid_status",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_bid_status",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:spot_instance_id": {
		"depends_on":     [],
		"description":    "The Instance ID (if any) that is currently fulfilling the Spot Instance request",
		"module_address": "module.ec2_instance",
		"name":           "spot_instance_id",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_instance_id",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:spot_request_state": {
		"depends_on":     [],
		"description":    "The current request state of the Spot Instance Request",
		"module_address": "module.ec2_instance",
		"name":           "spot_request_state",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_spot_instance_request.this[0].spot_request_state",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
	"module.ec2_instance:tags_all": {
		"depends_on":     [],
		"description":    "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block",
		"module_address": "module.ec2_instance",
		"name":           "tags_all",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_instance.this[0].tags_all",
				"aws_instance.this[0]",
				"aws_instance.this",
				"aws_spot_instance_request.this[0].tags_all",
				"aws_spot_instance_request.this[0]",
				"aws_spot_instance_request.this",
			],
		},
	},
}

module_calls = {
	"dev_ec2_instance": {
		"config": {
			"ami": {
				"constant_value": "ami-ebd02392",
			},
			"instance_type": {
				"constant_value": "t2.micro",
			},
			"key_name": {
				"constant_value": "user1",
			},
			"name": {
				"references": [
					"each.key",
				],
			},
			"subnet_id": {
				"constant_value": "subnet-eddcdzz4",
			},
			"tags": {
				"constant_value": {
					"Environment": "dev",
					"Terraform":   "true",
				},
			},
			"vpc_security_group_ids": {
				"constant_value": [
					"sg-12345678",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "dev_ec2_instance",
		"source":             "terraform-aws-modules/ec2-instance/aws",
		"version_constraint": "~> 3.0",
	},
	"ec2_instance": {
		"config": {
			"ami": {
				"constant_value": "ami-ebd02392",
			},
			"instance_type": {
				"constant_value": "t2.micro",
			},
			"key_name": {
				"constant_value": "user1",
			},
			"name": {
				"references": [
					"each.key",
				],
			},
			"subnet_id": {
				"constant_value": "subnet-eddcdzz4",
			},
			"tags": {
				"constant_value": {
					"Environment": "prod",
					"Terraform":   "true",
				},
			},
			"vpc_security_group_ids": {
				"constant_value": [
					"sg-12345678",
				],
			},
		},
		"count":              {},
		"depends_on":         [],
		"for_each":           {},
		"module_address":     "",
		"name":               "ec2_instance",
		"source":             "terraform-aws-modules/ec2-instance/aws",
		"version_constraint": "~> 3.0",
	},
}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
